// Generated by CoffeeScript 1.3.3
(function() {

  namespace('timer.view');

  namespace('timer.model');

  namespace('timer.collection');

  namespace('timer.router');

  $(function() {
    timer.router = new timer.router.MainRouter();
    return Backbone.history.start({
      pushState: false
    });
  });

  /* --------------------------------------------
       Begin Slip.coffee
  --------------------------------------------
  */


  timer.model.Slip = Backbone.Model.extend({
    defaults: {
      'running': false,
      'description': '',
      'duration': 0
    },
    urlRoot: 'slips/'
  });

  /* --------------------------------------------
       Begin Slips.coffee
  --------------------------------------------
  */


  timer.collection.Slips = Backbone.Collection.extend({
    model: timer.model.Slip,
    parse: function(result) {
      return result;
    }
  });

  /* --------------------------------------------
       Begin SlipsList.coffee
  --------------------------------------------
  */


  /* --------------------------------------------
       Begin TimerView.coffee
  --------------------------------------------
  */


  /* --------------------------------------------
       Begin MainRouter.coffee
  --------------------------------------------
  */


  timer.router.MainRouter = Backbone.Router.extend({
    routes: {
      'start/:term': 'startTimer',
      'stop/:term': 'stopTimer',
      'reset/:term': 'resetTimer'
    },
    initialize: function() {
      timer.templates = new TemplateController();
      timer.slips = new timer.collection.Slips();
      timer.slips.on('reset', this.initApplication, this);
      return log("Initialzed new instance of timer.router.MainRouter");
    },
    initApplication: function() {
      return log("Successfully fetched time slips from the server.");
    },
    startTimer: function(desc) {
      return log("Starting timer for " + desc);
    },
    stopTimer: function(desc) {
      return log("Stopping timer for " + desc);
    },
    resetTimer: function(desc) {
      return log("Resetting timer for " + desc);
    }
  });

}).call(this);
